#ifndef FONT_H
#define FONT_H

#include <stdint.h>

// Tabela de fontes 5x5 para caracteres
const uint8_t font_5x5[95][5] = {
    {0x00, 0x00, 0x00, 0x00, 0x00}, // Espa√ßo (32)
    {0x00, 0x00, 0x1F, 0x00, 0x00}, // !
    {0x00, 0x03, 0x00, 0x03, 0x00}, // "
    {0x15, 0x1F, 0x1F, 0x15, 0x1F}, // #
    {0x0E, 0x15, 0x1F, 0x15, 0x0A}, // $
    {0x11, 0x13, 0x08, 0x04, 0x02}, // %
    {0x0E, 0x15, 0x15, 0x15, 0x0A}, // &
    {0x00, 0x03, 0x00, 0x00, 0x00}, // '
    {0x00, 0x07, 0x18, 0x18, 0x07}, // (
    {0x00, 0x07, 0x18, 0x18, 0x07}, // )
    {0x0A, 0x15, 0x0E, 0x15, 0x0A}, // *
    {0x04, 0x04, 0x1F, 0x04, 0x04}, // +
    {0x00, 0x00, 0x10, 0x18, 0x00}, // ,
    {0x04, 0x04, 0x04, 0x04, 0x04}, // -
    {0x00, 0x00, 0x10, 0x00, 0x00}, // .
    {0x01, 0x02, 0x04, 0x08, 0x10}, // /
    {0x1F, 0x11, 0x11, 0x11, 0x1F}, // 0
    {0x00, 0x11, 0x1F, 0x10, 0x00}, // 1
    {0x1F, 0x10, 0x1F, 0x01, 0x1F}, // 2
    {0x1F, 0x10, 0x1F, 0x10, 0x1F}, // 3
    {0x11, 0x11, 0x1F, 0x10, 0x10}, // 4
    {0x1F, 0x01, 0x1F, 0x10, 0x1F}, // 5
    {0x1F, 0x01, 0x1F, 0x11, 0x1F}, // 6
    {0x1F, 0x10, 0x10, 0x10, 0x10}, // 7
    {0x1F, 0x11, 0x1F, 0x11, 0x1F}, // 8
    {0x1F, 0x11, 0x1F, 0x10, 0x1F}, // 9
    {0x00, 0x0E, 0x0E, 0x00, 0x00}, // :
    {0x00, 0x16, 0x1E, 0x00, 0x00}, // ;
    {0x00, 0x08, 0x14, 0x22, 0x41}, // <
    {0x11, 0x11, 0x11, 0x11, 0x11}, // =
    {0x41, 0x22, 0x14, 0x08, 0x00}, // >
    {0x0F, 0x10, 0x10, 0x10, 0x10}, // ?
    {0x1F, 0x11, 0x1D, 0x11, 0x1F}, // @
    {0x1F, 0x11, 0x1F, 0x11, 0x11}, // A
    {0x1F, 0x15, 0x15, 0x15, 0x1F}, // B
    {0x1F, 0x11, 0x11, 0x11, 0x1F}, // C
    {0x1F, 0x11, 0x11, 0x11, 0x1F}, // D
    {0x1F, 0x15, 0x15, 0x15, 0x15}, // E
    {0x1F, 0x10, 0x10, 0x10, 0x10}, // F
    {0x1F, 0x11, 0x15, 0x15, 0x1F}, // G
    {0x11, 0x11, 0x1F, 0x11, 0x11}, // H
    {0x1F, 0x04, 0x04, 0x04, 0x1F}, // I
    {0x1F, 0x02, 0x02, 0x02, 0x02}, // J
    {0x11, 0x11, 0x15, 0x15, 0x11}, // K
    {0x10, 0x10, 0x10, 0x10, 0x1F}, // L
    {0x11, 0x1F, 0x1F, 0x11, 0x11}, // M
    {0x11, 0x1F, 0x1F, 0x11, 0x11}, // N
    {0x1F, 0x11, 0x11, 0x11, 0x1F}, // O
    {0x1F, 0x10, 0x10, 0x10, 0x10}, // P
    {0x1F, 0x11, 0x11, 0x15, 0x1F}, // Q
    {0x1F, 0x10, 0x10, 0x15, 0x1F}, // R
    {0x1F, 0x10, 0x1F, 0x01, 0x1F}, // S
    {0x10, 0x10, 0x1F, 0x10, 0x10}, // T
    {0x11, 0x11, 0x11, 0x11, 0x1F}, // U
    {0x11, 0x11, 0x11, 0x11, 0x0A}, // V
    {0x11, 0x1F, 0x1F, 0x1F, 0x11}, // W
    {0x11, 0x11, 0x0A, 0x0A, 0x11}, // X
    {0x11, 0x11, 0x0A, 0x04, 0x04}, // Y
    {0x1F, 0x01, 0x03, 0x06, 0x1F}, // Z
    {0x00, 0x00, 0x1F, 0x00, 0x00}, // [
    {0x10, 0x08, 0x04, 0x02, 0x01}, // \
    {0x00, 0x00, 0x1F, 0x00, 0x00}, // ]
    {0x02, 0x05, 0x0A, 0x11, 0x11}, // ^
    {0x10, 0x10, 0x10, 0x10, 0x10}, // _
    {0x00, 0x01, 0x02, 0x00, 0x00}, // `
    {0x00, 0x1E, 0x10, 0x1F, 0x10}, // a
    {0x1F, 0x15, 0x15, 0x15, 0x1F}, // b
    {0x00, 0x1E, 0x10, 0x10, 0x1E}, // c
    {0x10, 0x10, 0x1F, 0x15, 0x1F}, // d
    {0x00, 0x1E, 0x15, 0x15, 0x1E}, // e
    {0x0E, 0x10, 0x10, 0x10, 0x10}, // f
    {0x00, 0x1E, 0x15, 0x15, 0x1E}, // g
    {0x11, 0x11, 0x1F, 0x11, 0x11}, // h
    {0x00, 0x10, 0x10, 0x10, 0x00}, // i
    {0x00, 0x02, 0x02, 0x02, 0x02}, // j
    {0x11, 0x11, 0x15, 0x15, 0x11}, // k
    {0x10, 0x10, 0x10, 0x10, 0x10}, // l
    {0x00, 0x1F, 0x1F, 0x00, 0x00}, // m
    {0x00, 0x1F, 0x1F, 0x00, 0x00}, // n
    {0x00, 0x1E, 0x10, 0x10, 0x1E}, // o
    {0x00, 0x1F, 0x15, 0x15, 0x10}, // p
    {0x00, 0x1E, 0x15, 0x15, 0x1E}, // q
    {0x00, 0x1F, 0x10, 0x10, 0x10}, // r
    {0x00, 0x1E, 0x15, 0x15, 0x00}, // s
    {0x10, 0x1F, 0x10, 0x10, 0x10}, // t
    {0x00, 0x11, 0x11, 0x11, 0x1F}, // u
    {0x00, 0x11, 0x11, 0x11, 0x0A}, // v
    {0x00, 0x11, 0x1F, 0x1F, 0x11}, // w
    {0x00, 0x11, 0x11, 0x0A, 0x11}, // x
    {0x00, 0x11, 0x11, 0x11, 0x0A}, // y
    {0x00, 0x1F, 0x01, 0x01, 0x1F}, // z
    {0x00, 0x10, 0x1F, 0x10, 0x00}, // {
    {0x00, 0x00, 0x1F, 0x00, 0x00}, // |
    {0x00, 0x10, 0x1F, 0x10, 0x00}, // }
    {0x00, 0x11, 0x15, 0x1F, 0x1F}  // ~
};

#endif // FONT_H
